version: "3"

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    environment:
      - GF_INSTALL_PLUGINS=grafana-opensearch-datasource
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=esnet-matrix-panel
      - GF_AUTH_GOOGLE_ENABLED=true
      - GF_AUTH_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GF_AUTH_GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GF_AUTH_GOOGLE_ALLOWED_DOMAINS=umich.edu
      - GF_AUTH_GOOGLE_SCOPES=openid email profile https://www.googleapis.com/auth/cloud-identity.groups.readonly
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=smtp.gmail.com:587
      - GF_SMTP_USER=${GF_SMTP_USER}
      - GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${GF_SMTP_USER}
      - GF_SMTP_FROM_NAME=Grafana
      - GF_SERVER_ROOT_URL=https://<YOUR-PIPELINE-HOSTNAME>
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-plugins:/var/lib/grafana/plugins
    networks: [frontend]
    restart: always

  # the below is for HTTPS with certbot
  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx-html:/var/www/certbot          # ACME webroot
      - certbot-etc:/etc/letsencrypt         # live certs
    ports:
      - "80:80"     # ACME HTTPâ€‘01 challenge
      - "443:443"   # HTTPS for users
    depends_on: [grafana]
    networks: [frontend]
    restart: always

  certbot:
    image: certbot/certbot:latest
    volumes:
      - nginx-html:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    entrypoint: >
      sh -c "trap exit TERM;
             while :; do
               certbot renew --webroot -w /var/www/certbot --quiet;
               nginx -s reload 2>/dev/null || true;
               sleep 12h & wait $${!};
             done"
    networks: [frontend]
    depends_on: [nginx]              # renewals need nginx running
    restart: always

volumes:
  grafana-data:
  nginx-html:
  certbot-etc:
  grafana-plugins:

networks:
  frontend:
    external:
      name: pssid-data-pipeline_opensearch-net
